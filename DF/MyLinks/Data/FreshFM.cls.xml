<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DF.MyLinks.Data.FreshFM">
<Super>%Persistent</Super>
<TimeCreated>63855,45136.883437</TimeCreated>

<Property name="Datum">
<Type>%Date</Type>
<InitialExpression>+$h</InitialExpression>
</Property>

<Index name="iDatum">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>Datum</Properties>
<Unique>1</Unique>
</Index>

<Property name="Songs">
<Type>DF.MyLinks.Data.FreshFMsongs</Type>
<Cardinality>children</Cardinality>
<Inverse>ParentRef</Inverse>
<Relationship>1</Relationship>
</Property>

<Method name="getLatestsSongs">
<ClassMethod>1</ClassMethod>
<FormalSpec>cnt=5,datum={$zd($h,3)},cas=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	#define qjs(%1) ##class(%CSP.Page).QuoteJS(%1)
	#define uEnc(%1) ##class(%CSP.Page).EscapeURL(%1)
	#dim sc =$$$OK
	#dim ex,ret,tRet,pRet,text=""
	try
	{
		i $zstrip(datum,"*CW")="" s datum=$zd($h,3)
		i $zstrip(cas,"*CW")="" s cas=##class(%Library.Time).LogicalToDisplay($p($h,",",2))
		s cas=##class(%Library.Time).DisplayToLogical(cas)
		i cas<3600
		{
			s cas1=0
		}
		else
		{
			s cas1=cas-3600
		}
		s cas1=##class(%Library.Time).LogicalToDisplay(cas1)
		s $p(cas1,":",3)="00"
		s cas2=##class(%Library.Time).LogicalToDisplay(cas)
		s $p(cas2,":",3)="00"
		i cnt>10 s cnt=10
		i cnt<1 s cnt=5
		s pRet="[<rrr>]"
		s tRet=""
		#SQLcompile select=ODBC
		&sql(declare c1 cursor for
			select top 10 SongName,SongTime,PlayerURL FROM  DF_MyLinks_Data.FreshFMsongs 
				where ParentRef=:datum 
				and SongTimeTime between cast(:cas1 as time) and cast(:cas2 as time)
				order by parentref desc, SongTime asc
			)
		&sql(open c1)
		i SQLCODE'=100,SQLCODE'=0
		{
			throw ##class(%Exception.SQL).CreateFromSQLCODE(SQLCODE,$g(%msg))
		}
		f
		{
			n SQLCODE
			&sql(fetch c1 into :sn,:st,:su)
			q:SQLCODE
			s text=$$$qjs(sn)_","_$$$qjs(st)_","_$$$qjs($$$uEnc(su))
			s tRet=tRet_$replace(pRet,"<rrr>",text)_","
			
		}
		s tRet=$e(tRet,1,*-1)
		&sql(close c1)
	}
	catch ex
	{
		s tRet="["_$$$qjs(ex.DisplayString())_"]"
	}
	q tRet
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DF.MyLinks.Data.FreshFMD</DataLocation>
<DefaultData>FreshFMDefaultData</DefaultData>
<IdLocation>^DF.MyLinks.Data.FreshFMD</IdLocation>
<IndexLocation>^DF.MyLinks.Data.FreshFMI</IndexLocation>
<StreamLocation>^DF.MyLinks.Data.FreshFMS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="FreshFMDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Datum</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
